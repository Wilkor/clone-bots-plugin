{"version":3,"sources":["api/applicationService.js","api/commomService.js","components/PageHeader/PageHeaderComponent.jsx","reducers/CommonReducer.js","contexts/CommonContext.js","components/PageTemplate/PageTemplateComponent.jsx","baseUrl.js","services/handleGetOrigin.js","services/handleSetPublished.js","services/handleSetWorkingConfiguration.js","services/handleGetWorkFlow.js","services/handleGetGlobais.js","services/handleGetGlobaisPublished.js","services/handleSetPublishedFlow.js","services/handleGetWorkFlowPublished.js","services/handleSetGlobal.js","services/handleGetResourceAll.js","services/handleGetResourceItems.js","services/handleSetResource.js","services/handleGetRules.js","services/handleSetRules.js","services/handleGetReplies.js","services/handleSetReplies.js","utils/guid.js","components/BlipLoading/BlipLoadingComponent.jsx","components/CloneBots/clone.js","constante.js","components/MarketPlace/marketplace.js","App.js","serviceWorker.js","index.js","static/images/logo.png"],"names":["getApplication","a","IframeMessageProxy","sendMessage","action","application","response","showToast","toast","content","withLoading","func","PageHeaderComponent","title","logo","className","id","src","alt","CommonReducer","state","type","language","toLowerCase","loading","loggedUser","Error","CommonContext","React","createContext","CommonProvider","props","useReducer","common","dispatch","value","useMemo","Provider","PageTemplateComponent","children","api","create","baseURL","guid","apikey","post","headers","resource","key","items","encodeURI","trim","idReplies","s4","Math","floor","random","toString","substring","BlipLoadingComponent","Clone","useState","localStorage","getItem","keyOrigin","setKeyOrigin","keyTarget","setKeyTarget","setLoading","checkedResource","setCheckedResource","checkedRules","setCheckedRules","checkedBuilder","setCheckedBuilder","checkedReplies","setCheckedReplies","event","preventDefault","showMessage","includes","handleGetOrigin","comeBackHandleGerOrigin","data","handleSetPublished","handleSetWorkingConfiguration","handleGetWorkFlow","comeBackHandleGetWorkFlow","handleSetPublishedFlow","handleGetWorkFlowPublished","handleGetGlobais","getGlobal","setGlobal","handleGetGlobaisPublished","status","handleGetResourceAll","getResourceAll","forEach","handleGetResourceItems","resultGetItems","handleSetResource","handleGetRules","allRules","rulesItems","handleSetRules","handleGetReplies","e","total","handleSetReplies","msg","setTimeout","message","page","style","padding","onChange","target","setItem","name","placeholder","required","nextChecked","checked","onColor","onClick","marginRight","removeItem","config","botMarketPlace","botMarketPlaceTarget","useStyles","makeStyles","theme","root","margin","marginTop","marginButton","marginLeft","cardHeader","spacing","fontFamily","list","width","height","backgroundColor","palette","background","paper","maxHeight","overflow","button","not","b","filter","indexOf","intersection","TransferList","useEffect","handleAddBoxInBuilder","classes","setChecked","left","setLeft","right","setRight","constante","setBuilderOrigin","setBuilderTarget","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","length","handleToggleAll","comeBackHandleGetWorkFlowOrigin","arrayOfBoxId","Object","keys","listBox","boxId","boxText","$title","cloneBoxId","comeBackHandleGetWorkFlowTarget","flowTarget","flowOrigin","boxSelected","console","log","flow","customList","Card","CardHeader","avatar","Checkbox","indeterminate","disabled","inputProps","color","subheader","Divider","List","dense","component","role","map","labelId","ListItem","ListItemIcon","tabIndex","disableRipple","ListItemText","primaryTypographyProps","fontSize","primary","Buttons","Grid","container","justifyContent","alignItems","item","direction","Button","variant","size","concat","aria-label","MarketPlace","App","shortName","fetchApi","accessKey","KEY","btoa","atob","BlipTabs","LogoCloneBots","href","data-ref","Boolean","window","location","hostname","match","listen","rootDiv","document","getElementById","ResizeObserver","scrollHeight","observe","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1e52ec9b.chunk.js","sourcesContent":["import { IframeMessageProxy } from 'iframe-message-proxy'\r\n\r\nexport const getApplication = async () => {\r\n    const { response: application } = await IframeMessageProxy.sendMessage({\r\n        action: 'getApplication',\r\n    })\r\n\r\n    return application\r\n}\r\n\r\nexport const getContacts = async () => {\r\n    const { response: { items } } = await IframeMessageProxy.sendMessage({\r\n        action: 'sendCommand',\r\n        content: {\r\n            destination: 'MessagingHubService',\r\n            command: {\r\n                method: 'get',\r\n                uri: '/contacts'\r\n            }\r\n        }\r\n    })\r\n    \r\n    return items\r\n}\r\n\r\nexport const getThreads = async () => {\r\n    const { response: { items } } = await IframeMessageProxy.sendMessage({\r\n        action: 'sendCommand',\r\n        content: {\r\n            destination: 'MessagingHubService',\r\n            command: {\r\n                method: 'get',\r\n                uri: '/threads'\r\n            }\r\n        }\r\n    })\r\n\r\n    return items\r\n}","import { IframeMessageProxy } from 'iframe-message-proxy'\r\n\r\nexport const startLoading = () => IframeMessageProxy.sendMessage({ action: 'startLoading' })\r\n\r\nexport const stopLoading = () => IframeMessageProxy.sendMessage({ action: 'stopLoading' })\r\n\r\nexport const setHeight = (height) => IframeMessageProxy.sendMessage({ action: 'heightChange', content: height })\r\n\r\nexport const showToast = (toast) => IframeMessageProxy.sendMessage({ action: 'toast', content: toast })\r\n\r\nexport const withLoading = async func => {\r\n    startLoading()\r\n\r\n    try {\r\n        return await func()\r\n    } finally {\r\n        stopLoading()\r\n    }\r\n}","import React from 'react'\r\nimport Proptypes from 'prop-types'\r\n\r\nexport const PageHeaderComponent = ({ title, logo }) => (\r\n  <>\r\n    <div className=\"header\">\r\n        <div className=\"dt dt--fixed\">\r\n            <div className=\"dtc tl v-mid w-90\">\r\n                <h1 className=\"bp-fs-3 bp-c-city\">{title}</h1>\r\n            </div>\r\n            <div className=\"dtc w-10\">\r\n                <div className=\"dt dt--fixed\">\r\n                    <div id=\"logo-area\" className=\"dt-row tc\">\r\n                        {logo && (\r\n                            <img\r\n                                id=\"logo-img\"\r\n                                className=\"logo-img\"\r\n                                src={logo}\r\n                                alt=\"logo\"\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"dt dt--fixed\">\r\n            <div className=\"bp-divider-h\"></div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n  </>\r\n)\r\n\r\nPageHeaderComponent.propTypes = {\r\n  title: Proptypes.string,\r\n}\r\n","export const CommonReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'setLanguage':\r\n      return { ...state, language: action.language.toLowerCase() }\r\n    case 'setLoading':\r\n      return { ...state, loading: action.loading }\r\n    case 'setLoggedUser':\r\n      return { ...state, loggedUser: action.loggedUser }\r\n    default:\r\n      throw new Error(`CommonReducer: invalid action called ${action.type}`)\r\n  }\r\n}\r\n\r\n","import React, { useCallback } from 'react'\r\nimport { CommonReducer } from 'reducers/CommonReducer'\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\n\r\nconst CommonContext = React.createContext()\r\n\r\nconst useCommon = () => {\r\n  const context = React.useContext(CommonContext)\r\n  if (!context) {\r\n    throw new Error('useCommon must be used within a CommonProvider')\r\n  }\r\n  const [common, dispatch] = context\r\n\r\n  //defining actions to be used based on the reducer\r\n  const setLanguage = useCallback(\r\n    (language) => dispatch({ type: 'setLanguage', language }),\r\n    [dispatch]\r\n  )\r\n  const setLoading = useCallback(\r\n    (loading) => dispatch({ type: 'setLoading', loading }),\r\n    [dispatch]\r\n  )\r\n  const setLoggedUser = useCallback(\r\n    (loggedUser) => dispatch({ type: 'setLoggedUser', loggedUser }),\r\n    [dispatch]\r\n  )\r\n  \r\n  moment.locale(common.language)\r\n\r\n  return {\r\n    common,\r\n    moment,\r\n    setLanguage,\r\n    setLoading,\r\n    setLoggedUser,\r\n  }\r\n}\r\n\r\nconst CommonProvider = (props) => {\r\n  const [common, dispatch] = React.useReducer(CommonReducer, { language: 'pt', loading: false })\r\n  const value = React.useMemo(() => [common, dispatch], [common])\r\n  return <CommonContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport { CommonProvider, useCommon }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PageTemplateComponent = ({\r\n  children,\r\n}) => {\r\n  return <>\r\n    <div className=\"pv4\">\r\n      <div className=\"bp-card bp-card--left-arrow\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  </>\r\n}\r\n\r\nPageTemplateComponent.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { PageTemplateComponent }\r\n","import { create } from 'apisauce';\r\n\r\nconst api = create({\r\n  baseURL: 'https://http.msging.net',\r\n});\r\n\r\nexport default api;\r\n","import api from '../baseUrl';\r\n\r\nexport default (guid, apikey) => {\r\n\r\n    return api.post('/commands',{\r\n          \"id\":guid,\r\n          \"method\": \"get\",\r\n          \"uri\": \"/buckets/blip_portal:builder_working_configuration?$take=1000\"\r\n          },{\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': apikey\r\n            }});\r\n    \r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, resource, key) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"method\": \"set\",\r\n    resource,\r\n    \"type\": \"application/json\",\r\n    \"uri\": \"/buckets/blip_portal%3Abuilder_published_configuration\"\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, resource, key) => {\r\n\r\n  api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"method\": \"set\",\r\n    resource,\r\n    \"type\": \"application/json\",\r\n    \"uri\": \"/buckets/blip_portal%3Abuilder_working_configuration\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n   \r\n   \r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, key) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"method\": \"get\",\r\n    \"uri\": \"/buckets/blip_portal:builder_working_flow?$take=100\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n  }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, key ) => {\r\n  \r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"method\": \"get\",\r\n    \"uri\": \"/buckets/blip_portal:builder_working_global_actions?$take=100\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, resource, key) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\":guid,\r\n    \"method\": \"set\",\r\n    resource,\r\n   \"type\": \"application/json\",\r\n    \"uri\": \"/buckets/blip_portal%3Abuilder_published_global_actions\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (resource, key) => {\r\n  return api.post('/commands',{\r\n\r\n    \"id\":\"61d82a14-adf0-4ddd-aeb1-73736eca083e\",\r\n    \"method\": \"set\",\r\n     resource,\r\n     \"type\": \"application/json\",\r\n    \"uri\": \"/buckets/blip_portal%3Abuilder_working_flow\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n  }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, resource, key) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"method\": \"set\",\r\n    resource,\r\n    \"type\": \"application/json\",\r\n    \"uri\": \"/buckets/blip_portal%3Abuilder_published_flow\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n  }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, resource, key) => {\r\n  \r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"method\": \"set\",\r\n    resource,\r\n    \"type\": \"application/json\",\r\n    \"uri\": \"/buckets/blip_portal%3Abuilder_working_global_actions\"\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n\r\n}\r\n","import api from '../baseUrl';\r\n\r\nexport default (guid, key) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\":guid,\r\n    \"method\": \"get\",\r\n    \"uri\": \"/resources?$take=100000\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, key, items) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\":guid,\r\n    \"method\": \"get\",\r\n    \"uri\": `/resources/${items}`\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, key, type, items, value) => {\r\n  return api.post('/commands', {\r\n    \"id\": guid,\r\n    \"method\": \"set\",\r\n    \"uri\":  encodeURI(\"/resources/\"+ items.trim()),\r\n    \"type\": type,\r\n    \"resource\": value\r\n\r\n  },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n  }});\r\n}\r\n\r\n","import api from '../baseUrl';\r\n\r\nexport default (guid, key ) => {\r\n  \r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"to\": \"postmaster@desk.msging.net\",\r\n    \"method\": \"get\",\r\n    \"uri\": \"/rules\"\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, resource, key) => {\r\n\r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"to\": \"postmaster@desk.msging.net\",\r\n    \"method\": \"set\",\r\n    \"uri\": \"/rules\",\r\n    \"type\": \"application/vnd.iris.desk.rule+json\",\r\n     resource,\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n\r\n}","import api from '../baseUrl';\r\n\r\nexport default (guid, key, idReplies = '' ) => {\r\n  \r\n  return api.post('/commands',{\r\n\r\n    \"id\": guid,\r\n    \"to\": \"postmaster@desk.msging.net\",\r\n    \"method\": \"get\",\r\n    \"uri\": `/replies/${idReplies}`\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n      }});\r\n}","import api from '../baseUrl';\r\n\r\nexport default (resource, key, idReplies) => {\r\n  return api.post('/commands',{ \r\n    \"id\": \"7e9045d2-1522-42ff-979b-393860be9186\",\r\n    \"method\": \"set\",\r\n    resource,\r\n    \"to\": \"postmaster@desk.msging.net\",\r\n    \"type\": \"application/vnd.lime.collection+json\",\r\n    \"uri\": `/replies/${idReplies}`\r\n    },{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': key\r\n  }});\r\n}","\r\nexport default () => {\r\n\r\n  function s4() {\r\n    return Math.floor((1 + Math.random()) * 0x10000)\r\n      .toString(16)\r\n      .substring(1);\r\n  }\r\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n    s4() + '-' + s4() + s4() + s4();\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlipLoadingComponent = ({\r\n  className,\r\n}) => {\r\n  return <div id=\"loading\" className={`bp-loading ${className}`}>\r\n    <div className=\"bp-loading__content\">\r\n      <div className=\"bp-loading1 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading2 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading3 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading4 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading5 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading6 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading7 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading8 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading9 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading10 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading11 bp-loading__circle\"></div>\r\n      <div className=\"bp-loading12 bp-loading__circle\"></div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nBlipLoadingComponent.propTypes = {\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport { BlipLoadingComponent }\r\n","import React, { useState } from 'react';\r\nimport {NotificationContainer} from 'react-notifications';\r\nimport handleGetOrigin from '../../services/handleGetOrigin';\r\nimport handleSetPublished from '../../services/handleSetPublished';\r\nimport handleSetWorkingConfiguration from '../../services/handleSetWorkingConfiguration';\r\nimport handleGetWorkFlow from '../../services/handleGetWorkFlow';\r\nimport handleGetGlobais from '../../services/handleGetGlobais';\r\nimport handleGetGlobaisPublished from '../../services/handleGetGlobaisPublished';\r\nimport handleSetPublishedFlow from '../../services/handleSetPublishedFlow';\r\nimport handleGetWorkFlowPublished from '../../services/handleGetWorkFlowPublished';\r\nimport setGlobal from '../../services/handleSetGlobal';\r\n\r\nimport handleGetResourceAll from '../../services/handleGetResourceAll';\r\nimport handleGetResourceItems from '../../services/handleGetResourceItems';\r\nimport handleSetResource from '../../services/handleSetResource';\r\n\r\nimport handleGetRules from '../../services/handleGetRules';\r\nimport handleSetRules from '../../services/handleSetRules';\r\n\r\nimport handleGetReplies from '../../services/handleGetReplies';\r\nimport handleSetReplies from '../../services/handleSetReplies';\r\n\r\nimport { showToast } from \"../../api/commomService\"\r\n\r\nimport Switch from \"react-switch\";\r\nimport guid from '../../utils/guid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {BlipLoading}from '../BlipLoading'\r\n\r\n\r\nfunction Clone(){\r\n\r\n  \r\n   const [keyOrigin, setKeyOrigin] = useState(localStorage.getItem('keyOne'));\r\n   const [keyTarget, setKeyTarget] = useState(localStorage.getItem('keyTwo'));\r\n   const [loading, setLoading] = useState(false)\r\n\r\n   const [checkedResource, setCheckedResource] = useState(false);\r\n   const handleChangeResource = nextChecked => {\r\n     setCheckedResource(nextChecked);\r\n   };\r\n\r\n   const [checkedRules, setCheckedRules] = useState(false);\r\n   const handleChangeRules = nextChecked => {\r\n     setCheckedRules(nextChecked);\r\n   };\r\n  \r\n   \r\n   const [checkedBuilder, setCheckedBuilder] = useState(false);\r\n   const handleChangeBuilder = nextChecked => {\r\n     setCheckedBuilder(nextChecked);\r\n   };\r\n  \r\n\r\n   const [checkedReplies, setCheckedReplies] = useState(false);\r\n   const handleChangeReplies = nextChecked => {\r\n     setCheckedReplies(nextChecked);\r\n   };\r\n  \r\n\r\n\r\n  \r\n  async function start(event) {\r\n\r\n\r\n    event.preventDefault();\r\n\r\n    setLoading(true)\r\n    if(!keyOrigin && !keyTarget){\r\n      showMessage('Data is missing. Please check the Source and Destination Keys!!','warning', 'Notice!');\r\n      setLoading(false)\r\n      return false;\r\n    \r\n    }\r\n      \r\n    if (!keyOrigin.includes('Key')) {\r\n      showMessage('key typed, is not a valid key!', 'warning', 'Notice!');\r\n      setLoading(false)\r\n      return false;\r\n    } \r\n\r\n    if (!checkedBuilder && !checkedRules && !checkedResource && !checkedReplies ) {\r\n \r\n      showMessage('Choose an option to clone!','warning', 'Notice!')\r\n      setLoading(false)\r\n      return false;\r\n    }\r\n\r\n \r\n\r\n if (checkedBuilder) {\r\n\r\n   const comeBackHandleGerOrigin = await handleGetOrigin(guid(), keyOrigin);\r\n   const { data } = comeBackHandleGerOrigin;\r\n  \r\n  \r\n    await handleSetPublished(guid(), data.resource, keyTarget);\r\n    await handleSetWorkingConfiguration(guid(), data.resource, keyTarget);\r\n\r\n    const comeBackHandleGetWorkFlow = await handleGetWorkFlow(guid(), keyOrigin);\r\n  \r\n    await handleSetPublishedFlow(comeBackHandleGetWorkFlow.data.resource, keyTarget);\r\n    await handleGetWorkFlowPublished(guid(), comeBackHandleGetWorkFlow.data.resource, keyOrigin );\r\n\r\n    const getGlobal = await handleGetGlobais(guid(), keyOrigin);\r\n    await setGlobal(guid(), getGlobal.data.resource , keyTarget);\r\n\r\n    const comeBckHandleGetGlobaisPublished = await\r\n    handleGetGlobaisPublished(guid(), comeBackHandleGetWorkFlow.data.resource , keyTarget);\r\n  \r\n  \r\n       \r\n    if (comeBckHandleGetGlobaisPublished.status === 200) {\r\n      \r\n      showMessage('Your builder has been cloned successfully','success','Done!')\r\n      setKeyOrigin('');\r\n      setKeyTarget('');\r\n      setCheckedBuilder(false)\r\n      setLoading(false)\r\n   \r\n    } else {\r\n      setCheckedBuilder(false)\r\n      showMessage('Error cloning builder','danger','Error!')\r\n    }\r\n }\r\n\r\n\r\n  if (checkedResource) {\r\n\r\n    const getResourceAll = await handleGetResourceAll(guid(), keyOrigin);\r\n    \r\n      if (getResourceAll.data.status !== 'failure') {\r\n\r\n          getResourceAll.data.resource.items.forEach( async (items) => {\r\n   \r\n          const resultGetItems = await handleGetResourceItems(guid(), keyOrigin, items );\r\n          await handleSetResource(guid(), keyTarget, resultGetItems.data.type, items, resultGetItems.data.resource);\r\n         \r\n      });\r\n\r\n        showMessage('Your resources have been cloned successfully','success', 'Done!');\r\n        setLoading(false)\r\n        setCheckedResource(false)\r\n\r\n  \r\n\r\n    } else {\r\n    \r\n        showMessage('Error cloning your resources','danger', 'Notice!');\r\n        setLoading(false)\r\n  \r\n    }\r\n  }\r\n\r\n\r\n  if (checkedRules) {\r\n\r\n    const allRules = await handleGetRules(guid(), keyOrigin);\r\n\r\n    if (allRules.data.status !== 'failure') {\r\n            \r\n         allRules.data.resource.items.forEach( async (rulesItems) => {\r\n         await handleSetRules(guid(), rulesItems, keyTarget)\r\n\r\n     })\r\n        showMessage('Your rules have been cloned successfully','success', 'Done!');\r\n        setLoading(false)\r\n        setCheckedRules(false)\r\n\r\n    } else {\r\n      setLoading(false)\r\n        showMessage('Error cloning your rules','danger', 'Notice!');\r\n    }\r\n    \r\n  }\r\n\r\n   if (checkedReplies) {\r\n\r\n    const {data:{status}} = await handleGetReplies(guid(), keyOrigin);\r\n\r\n      if(status !== 'failure') {\r\n\r\n        const {data:{resource:{items}}} = await handleGetReplies(guid(), keyOrigin);\r\n\r\n        items.forEach(async (e) => {\r\n           \r\n           const {data:{resource}} = await handleGetReplies(guid(), keyOrigin, e.id)\r\n           delete resource.total\r\n           await handleSetReplies(resource, keyTarget, e.id)\r\n  \r\n        })\r\n        showMessage('Your answers have been successfully cloned','success', 'Done!');\r\n        setLoading(false)\r\n        setCheckedReplies(false)\r\n      } else {\r\n\r\n        showMessage('Error cloning your answers','danger', 'Done!');\r\n        setLoading(false)\r\n        setCheckedReplies(false)\r\n\r\n      }\r\n\r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction showMessage(msg, type, status) {\r\n\r\n  setTimeout(() => {\r\n    \r\n      showToast({\r\n        type: type,\r\n        message: msg\r\n    })\r\n     \r\n   }, 900);\r\n\r\n}\r\n\r\n\r\n function setLocaStorageKey1(e) {\r\n\r\n     setKeyOrigin(e)\r\n     localStorage.setItem('keyOne', e )\r\n\r\n  }\r\n\r\n  function clear() {\r\n\r\n    localStorage.removeItem('keyOne');\r\n\r\n\r\n     setKeyOrigin('');\r\n     setKeyTarget('');\r\n  }\r\n\r\n    const page = (\r\n     \r\n      <div className=\"fadeIn animated\" style={{padding:'30px'}}>\r\n        <div className=\"home\">\r\n          <div className=\"\">\r\n            <form className=\"\">\r\n              <div className=\"form-group\">\r\n                <input  value={keyOrigin} \r\n                onChange={(event) => setLocaStorageKey1(event.target.value)} \r\n                type=\"text\" name=\"origem\" className=\"form-control\"   \r\n                placeholder=\"Enter the source bot key.\" required />\r\n              </div>\r\n      \r\n\r\n       <div className=\"container-switch\">\r\n\r\n       <label>\r\n        <span>Builder: </span>\r\n        <Switch onChange={handleChangeBuilder}\r\n          checked={checkedBuilder} onColor=\"#3f7de8\" />\r\n       </label>\r\n       <label>\r\n        <span>Recursos: </span>\r\n        <Switch onChange={handleChangeResource}\r\n          checked={checkedResource} onColor=\"#3f7de8\" />\r\n       </label>\r\n       <label>\r\n        <span>Regras: </span>\r\n        <Switch onChange={handleChangeRules}\r\n          checked={checkedRules}  onColor=\"#3f7de8\"/>\r\n       </label>\r\n       <label>\r\n        <span>Respostas Prontas: </span>\r\n        <Switch onChange={handleChangeReplies}\r\n          checked={checkedReplies}  onColor=\"#3f7de8\"/>\r\n       </label>\r\n  \r\n       </div>\r\n       \r\n             <div className=\"container-buttons\">\r\n              <button type=\"submit\" onClick={start} style={{marginRight:\"10px\"}} className=\"bp-btn bp-btn--bot bp-btn--small\">\r\n\r\n                {loading && (\r\n                <BlipLoading/>\r\n                )}\r\n                {loading && <span>Cloning</span>}\r\n                {!loading && <span>Clone Bot</span>}\r\n\r\n              </button>\r\n              <button type=\"button\" onClick={clear} style={{marginRight:\"10px\"}} className=\"bp-btn bp-btn--bot bp-btn--small\">Clear</button>\r\n\r\n               \r\n    \r\n             </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <NotificationContainer/>\r\n      </div>\r\n       \r\n     \r\n    )\r\n    return (\r\n      <div className=\"\">\r\n        {page}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default Clone;\r\n\r\n","const config = { \r\n  botMarketPlace: 'Key cGFyc2VtYXJrZXRwbGFjZTpwQzFXOGNuc1RmYnJ2dHRUMFFDOA==',\r\n  botMarketPlaceTarget: ''\r\n}\r\n\r\nexport default config","import React, { useState, useEffect, useCallback } from 'react';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {NotificationContainer,NotificationManager} from 'react-notifications';\r\nimport {BlipLoading}from '../BlipLoading'\r\n\r\n\r\n\r\n// builder\r\nimport handleGetWorkFlow from '../../services/handleGetWorkFlow';\r\nimport handleSetPublishedFlow from '../../services/handleSetPublishedFlow';\r\n\r\nimport { showToast } from \"../../api/commomService\"\r\n\r\nimport guid from '../../utils/guid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport constante from '../../constante';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n    marginTop: '-35px',\r\n    marginButton:'10px', \r\n    marginLeft: '-30px'\r\n\r\n\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n    fontFamily: 'Nunito Sans, Helvetica, sans-serif'\r\n \r\n  },\r\n  list: {\r\n  \r\n    width: 300,\r\n    height: 180,\r\n    backgroundColor: theme.palette.background.paper,\r\n    maxHeight: 200,\r\n    overflow: 'auto'\r\n    \r\n   \r\n    \r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  }\r\n}));\r\n\r\n\r\n\r\nfunction not(a, b) {\r\n\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nfunction  TransferList() {\r\n\r\n  \r\nuseEffect(() => {\r\n  handleAddBoxInBuilder();\r\n},[])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [checked, setChecked] = useState([]);\r\n  const [left, setLeft] = useState([]);\r\n  const [right, setRight] = useState([]);\r\n\r\n  const [keyOrigin, setKeyOrigin] = useState(constante.botMarketPlace);\r\n  const [keyTarget, setKeyTarget] = useState(localStorage.getItem('keyTarget'));\r\n  const [builderOrigin, setBuilderOrigin] = useState();\r\n  const [builderTarget, setBuilderTarget] = useState();\r\n  const [loading, setLoading] = useState(false)\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleAddBoxInBuilder = async () => {\r\n\r\n      const comeBackHandleGetWorkFlowOrigin =  await  handleGetWorkFlow(guid(), keyOrigin);\r\n\r\n      setBuilderOrigin(comeBackHandleGetWorkFlowOrigin);\r\n     \r\n  \r\n      const arrayOfBoxId = Object.keys(comeBackHandleGetWorkFlowOrigin.data.resource).filter((e) => e !== 'onboarding' && e !== 'fallback' );\r\n     \r\n      const listBox = []\r\n      \r\n       arrayOfBoxId.forEach((e) => {\r\n\r\n        listBox.push({\r\n                 boxId: comeBackHandleGetWorkFlowOrigin.data.resource[e].id,\r\n                 boxText: comeBackHandleGetWorkFlowOrigin.data.resource[e].$title\r\n         })\r\n       });\r\n\r\n       setLeft(listBox)\r\n      \r\n  \r\n  }\r\n\r\n\r\nconst cloneBoxId = async () => {\r\n\r\n  setLoading(true)\r\n\r\n  if(localStorage.getItem('keyTarget') === ''){\r\n    showMessage('Please check the destination key field!','warning', 'Notice!');\r\n    return false;\r\n  \r\n  }\r\n\r\n\r\n  const key = await localStorage.getItem('keyTarget');\r\n\r\n  const comeBackHandleGetWorkFlowTarget =  await  handleGetWorkFlow(guid(), key);\r\n  const comeBackHandleGetWorkFlowOrigin =  await  handleGetWorkFlow(guid(), keyOrigin);\r\n\r\n\r\n const flowTarget = comeBackHandleGetWorkFlowTarget\r\n const flowOrigin = comeBackHandleGetWorkFlowOrigin\r\n const boxSelected = right;\r\n\r\n console.log(flowTarget)\r\n\r\n\r\nboxSelected.forEach((flow) => {\r\n\r\n  flowTarget.data.resource[flow.boxId] = flowOrigin.data.resource[flow.boxId]\r\n\r\n})\r\n\r\n\r\n  \r\nconst publish  = await handleSetPublishedFlow(flowTarget.data.resource, key);\r\n\r\n\r\n   if (publish.status === 200) {\r\n     \r\n     showMessage('Your box has been cloned successfully','success','Done!');\r\n     handleAddBoxInBuilder();\r\n     setRight([]);\r\n     setLoading(false)\r\n  \r\n   } else {\r\n    setLoading(false)\r\n     showMessage('Error cloning your box','danger','Error!');\r\n     \r\n   }\r\n\r\n}\r\n\r\n\r\n\r\nconst showMessage = (msg, type, status) => {\r\n\r\n  setTimeout(() => {\r\n     setBuilderOrigin([]);\r\n     setBuilderTarget([]);\r\n     showToast({\r\n      type: type,\r\n      message: msg\r\n  })\r\n   }, 900);\r\n\r\n}\r\n\r\n\r\n\r\n  const customList = (title, items) => (\r\n\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        \r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all items selected' }}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list}  dense component=\"div\" role=\"list\">\r\n        {items.map((value) => {\r\n          const labelId = `transfer-list-all-item-${value.boxId}-label`;\r\n\r\n          return (\r\n            <ListItem key={value.boxId}  role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon >\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                  color=\"primary\"\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText   primaryTypographyProps={{style: {fontSize: 14}}} id={labelId} primary={`${value.boxText}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  const Buttons = () => (\r\n    \r\n    <div className=\"container-buttons\">\r\n    \r\n    <button \r\n    type=\"submit\" \r\n    onClick={cloneBoxId} \r\n    style={{marginLeft:\"30px\", width:'228px'}} \r\n    className=\"bp-btn bp-btn--bot bp-btn--small\">\r\n            {loading && (\r\n                <BlipLoading/>\r\n                )}\r\n                {loading && <span>Cloning</span>}\r\n                {!loading && <span>Clone</span>}\r\n\r\n    </button>\r\n\r\n   </div>\r\n  )\r\n\r\n  return (\r\n  \r\n     <div>\r\n    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList('Choices', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Chosen', right)}</Grid>\r\n    </Grid>\r\n   <Buttons/>\r\n   </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nconst  MarketPlace = () => {\r\n\r\n  const [keyTarget, setKeyTarget] = useState(localStorage.getItem('keyTarget'));\r\n\r\n  const setLocaStorageKey1 = (e) => {\r\n    setKeyTarget(e)\r\n    localStorage.setItem('keyTarget', e )\r\n\r\n }\r\n\r\n\r\n    const page = (\r\n     \r\n      <div className=\"fadeIn animated\" style={{padding:'30px'}}>\r\n        <div className=\"home\">\r\n        </div>\r\n  \r\n      </div>\r\n       \r\n     \r\n    )\r\n\r\n    return (\r\n      <div className=\"\">\r\n        {page}\r\n        <TransferList/>\r\n        <NotificationContainer/>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n\r\nexport default MarketPlace;\r\n","import React, { useEffect, useState } from \"react\"\r\nimport \"blip-toolkit/dist/blip-toolkit.css\"\r\nimport { getApplication, getContacts, getThreads } from \"./api/applicationService\"\r\nimport { showToast, withLoading } from \"./api/commomService\"\r\nimport { PageHeader } from \"components/PageHeader\"\r\nimport { BlipTable } from \"components/BlipTable\"\r\nimport { CommonProvider } from \"contexts/CommonContext\"\r\nimport { PageTemplate } from \"components/PageTemplate\"\r\nimport { BlipTabs } from 'blip-toolkit'\r\n\r\nimport CloneBots from 'components/CloneBots/clone'\r\nimport MarketPlace from 'components/MarketPlace/marketplace'\r\n\r\nimport LogoCloneBots from './static/images/logo.png';\r\n\r\nconst tableContactsModel = [\r\n    { label: \"Name\", key: \"name\" },\r\n    { label: \"Group\", key: \"group\" },\r\n    { label: \"Identity\", key: \"identity\" },\r\n    { label: \"Source\", key: \"source\" }\r\n]\r\n\r\nconst tableThreadsModel = [\r\n    { label: \"Identity\", key: \"identity\" },\r\n    { label: \"Last Message\", key: \"lastMessage\" },\r\n    { label: \"Unread Messages\", key: \"unreadMessages\" }\r\n]\r\n\r\nfunction App() {\r\n    const [application, setApplication] = useState({shortName: 'CloneBots'})\r\n    const [contacts, setContacts] = useState([])\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const fetchApi = async () => {\r\n  \r\n        showToast({\r\n            type: \"success\",\r\n            message: \"Success loaded\"\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n        withLoading(async () => {\r\n\r\n        try {\r\n            const {accessKey, shortName } = await getApplication();\r\n            const KEY = 'Key ' + btoa(`${shortName}:`+ atob(accessKey))\r\n           \r\n             localStorage.setItem('keyTwo', KEY);\r\n             localStorage.setItem('keyTarget', KEY);\r\n             new BlipTabs('tab-nav')\r\n             await fetchApi()\r\n\r\n        }catch(e) {\r\n\r\n             return false;\r\n        }\r\n\r\n        })\r\n    }, [])\r\n\r\n    const title = application.shortName;\r\n    const logo = LogoCloneBots\r\n\r\n    return (\r\n        <CommonProvider>\r\n            <div id=\"main\" className=\"App\">\r\n                <PageHeader title={title} logo={logo}/>\r\n                <PageTemplate title={title}>\r\n                    <div id=\"tab-nav\" className=\"bp-tabs-container\">\r\n                        <ul className=\"bp-tab-nav\">\r\n                            <li>\r\n                                {/* eslint-disable-next-line */}\r\n                                <a href=\"#\" data-ref=\"clonebots\">Clone bots</a>\r\n                            </li>\r\n                            <li>\r\n                                {/* eslint-disable-next-line */}\r\n                                <a href=\"#\" data-ref=\"marketplace\">MarketPlace</a>\r\n                            </li>\r\n                          \r\n                        </ul>\r\n                        <div className=\"bp-tab-content fl w-100\" data-ref=\"clonebots\">\r\n                           <CloneBots/>\r\n                        </div>\r\n                        <div className=\"bp-tab-content fl w-100\" data-ref=\"marketplace\">\r\n                            <MarketPlace/>\r\n                        \r\n                        </div>\r\n                       \r\n                    </div>\r\n                </PageTemplate>\r\n            </div>\r\n        </CommonProvider>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { IframeMessageProxy } from 'iframe-message-proxy'\r\nimport './index.scss'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { setHeight } from 'api/commomService'\r\nimport { ResizeObserver } from 'resize-observer'\r\nimport './index.css';\r\n\r\nIframeMessageProxy.listen()\r\n\r\nconst rootDiv = document.getElementById(\"root\")\r\n\r\nconst documentObserver = new ResizeObserver(() => {\r\n    setHeight(rootDiv.scrollHeight)\r\n})\r\n\r\ndocumentObserver.observe(rootDiv)\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.2a5031da.png\";"],"sourceRoot":""}